name: CI Pipeline for Java/Maven/Spring Boot with Docker and SonarCloud

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'ci/**'
  pull_request:
    branches:
      - main
  workflow_dispatch: # Cho phép chạy thủ công

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout mã nguồn
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Lấy toàn bộ lịch sử commit cho SonarCloud

      # Cài đặt Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Build và test với Maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # Phân tích mã nguồn với SonarCloud
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          echo "Debug: SONAR_HOST_URL=$SONAR_HOST_URL"
          echo "Debug: SONAR_ORGANIZATION=$SONAR_ORGANIZATION"
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=${{ github.ref_name }}

      # Lưu artifact (file JAR)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/asset-0.0.1-SNAPSHOT.jar
          retention-days: 7

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test # Chạy sau khi build-and-test hoàn thành
    steps:
      # Checkout mã nguồn
      - name: Checkout code
        uses: actions/checkout@v4

      # Tải artifact (file JAR)
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target/

      # Cài đặt Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Đăng nhập vào Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build và push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app:${{ github.sha }}
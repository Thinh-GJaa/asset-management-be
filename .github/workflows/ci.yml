name: CI Pipeline for Java/Maven/Spring Boot with Docker and SonarCloud

on:
  push:
    branches:
      - main
      - 'ci/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # cần cho SonarCloud

      - name: Display Environment Variables
        run: |
          echo "=== Environment Variables Debug ==="
          echo "SONAR_TOKEN: ${SONAR_TOKEN:0:10}..." # Chỉ hiển thị 10 ký tự đầu
          echo "SONAR_HOST_URL: $SONAR_HOST_URL"
          echo "SONAR_ORGANIZATION: $SONAR_ORGANIZATION"
          echo "SONAR_PROJECT_KEY: $SONAR_PROJECT_KEY"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "=================================="

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build & run tests
        run: mvn -B clean verify --file pom.xml

      - name: SonarCloud Scan
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.organization=$SONAR_ORGANIZATION \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.branch.name=${{ github.ref_name }}

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar
          retention-days: 7

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend
            ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend-${{ github.sha }}

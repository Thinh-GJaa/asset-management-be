name: CI Pipeline for Java/Maven/Spring Boot with Docker and SonarCloud

on:
  push:
    branches:
      - main
      - 'ci/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # cần cho SonarCloud

      - name: Display Environment Variables
        run: |
          echo "=== Environment Variables Debug ==="
          echo "Checking SONAR_TOKEN..."
          echo "SONAR_TOKEN: ${SONAR_TOKEN:0:10}..." # Chỉ hiển thị 10 ký tự đầu
          echo "Checking SONAR_HOST_URL..."
          echo "SONAR_HOST_URL: $SONAR_HOST_URL"
          echo "Checking SONAR_ORGANIZATION..."
          echo "SONAR_ORGANIZATION: $SONAR_ORGANIZATION"
          echo "Checking SONAR_PROJECT_KEY..."
          echo "SONAR_PROJECT_KEY: $SONAR_PROJECT_KEY"
          echo "Checking GitHub context..."
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "=================================="

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build & run tests
        run: mvn -B clean verify --file pom.xml

      - name: SonarCloud Configuration Check
        run: |
          echo "=== SonarCloud Configuration Debug ==="
          echo "Validating SonarCloud configuration..."
          echo "Checking SONAR_PROJECT_KEY..."
          echo "SONAR_PROJECT_KEY: $SONAR_PROJECT_KEY"
          echo "Checking SONAR_ORGANIZATION..."
          echo "SONAR_ORGANIZATION: $SONAR_ORGANIZATION"
          echo "Checking SONAR_HOST_URL..."
          echo "SONAR_HOST_URL: $SONAR_HOST_URL"
          echo "Checking SONAR_TOKEN length..."
          echo "SONAR_TOKEN length: ${#SONAR_TOKEN}"
          echo "Checking branch name..."
          echo "Branch name: ${{ github.ref_name }}"
          echo "======================================"
          
          echo "Validating required fields..."
          if [ -z "$SONAR_PROJECT_KEY" ] || [ -z "$SONAR_ORGANIZATION" ] || [ -z "$SONAR_TOKEN" ]; then
            echo "❌ Missing required SonarCloud configuration!"
            echo "Please check your GitHub Secrets:"
            if [ -z "$SONAR_TOKEN" ]; then
              echo "- SONAR_TOKEN: NOT SET"
            else
              echo "- SONAR_TOKEN: SET"
            fi
            if [ -z "$SONAR_PROJECT_KEY" ]; then
              echo "- SONAR_PROJECT_KEY: NOT SET"
            else
              echo "- SONAR_PROJECT_KEY: SET"
            fi
            if [ -z "$SONAR_ORGANIZATION" ]; then
              echo "- SONAR_ORGANIZATION: NOT SET"
            else
              echo "- SONAR_ORGANIZATION: SET"
            fi
            exit 1
          fi
          
          echo "✅All SonarCloud secrets are configured"

      - name: SonarCloud Scan
        run: |
          echo "Starting SonarCloud scan..."
          echo "Using project key: $SONAR_PROJECT_KEY"
          echo "Using organization: $SONAR_ORGANIZATION"
          echo "Using host URL: $SONAR_HOST_URL"
          echo "Using branch: ${{ github.ref_name }}"
          
          mvn sonar:sonar \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORGANIZATION" \
            -Dsonar.host.url="$SONAR_HOST_URL" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="${{ github.ref_name }}"
          
          echo "SonarCloud scan completed!"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar
          retention-days: 7

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display Docker Hub Configuration
        run: |
          echo "=== Docker Hub Configuration Debug ==="
          echo "Checking Docker Hub credentials..."
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "Checking DOCKERHUB_PASSWORD..."
          echo "DOCKERHUB_PASSWORD: ${DOCKERHUB_PASSWORD:0:10}..." # Chỉ hiển thị 10 ký tự đầu
          echo "Checking GitHub SHA..."
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "====================================="
          
          echo "Validating Docker Hub credentials..."
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
            echo "❌ Missing Docker Hub credentials!"
            echo "Please check your GitHub Secrets:"
            if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
              echo "- DOCKERHUB_USERNAME: NOT SET"
            else
              echo "- DOCKERHUB_USERNAME: SET"
            fi
            if [ -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
              echo "- DOCKERHUB_PASSWORD: NOT SET"
            else
              echo "- DOCKERHUB_PASSWORD: SET"
            fi
            exit 1
          fi
          
          echo "✅ Docker Hub credentials are configured"

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Docker Login
        run: |
          echo "Preparing to login to Docker Hub..."
          echo "Username: ${{ secrets.DOCKERHUB_USERNAME }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Prepare Docker Build
        run: |
          echo "Preparing to build and push Docker image..."
          echo "Image tags will be:"
          echo "- ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend"
          echo "- ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend-${{ github.sha }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend
            ${{ secrets.DOCKERHUB_USERNAME }}/ams:backend-${{ github.sha }}